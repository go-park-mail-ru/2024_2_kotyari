services:
  go_back:
    build:
      context: .
      dockerfile: ./cmd/main/Dockerfile
    ports:
      - "8000:8000"
    image: back-go-image
    container_name: back_go
    restart: unless-stopped
    volumes:
      - ./files:/apps/files
    networks:
      - app-network
    depends_on:
      - pg_db
      - redis_service

  csat_go:
    build:
      context: .
      dockerfile: ./cmd/csat/Dockerfile
    ports:
      - "8005:8005"
    image: csat-go-image
    container_name: csat_go
    restart: unless-stopped
    volumes:
      - ./files:/apps/files
    networks:
      - app-network
    depends_on:
      - csat_db
      - redis_service
      - go_back

  pg_db:
    image: postgres:16.4
    ports:
      - "54320:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./assets/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pg_data:/var/lib/postgresql/data/
    container_name: pg_db
    restart: unless-stopped
    networks:
      - app-network

  csat_db:
    image: postgres:16.4
    ports:
      - "54321:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${CSAT_USERNAME}
      - POSTGRES_PASSWORD=${CSAT_PASSWORD}
      - POSTGRES_DB=${CSAT_NAME}
    volumes:
      - ./assets/init_csat.sql:/docker-entrypoint-initdb.d/init.sql
      - csat_data:/var/lib/postgresql/data/
    container_name: csat_db
    restart: unless-stopped
    networks:
      - app-network

  redis_service:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    env_file:
      - .env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    container_name: redis_service
    restart: unless-stopped
    networks:
      - app-network

volumes:
  pg_data:
  redis_data:
  go_back:
  csat_data:

networks:
  app-network:
    driver: bridge