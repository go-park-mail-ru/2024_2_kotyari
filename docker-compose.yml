services:
  go_back:
    build: .
    ports:
      - "8000:8000"
    image: back-go-image
    container_name: back_go
    restart: unless-stopped
    volumes:
      - ./files:/app/files
    networks:
      - app-network
    depends_on:
      - pg_db
      - redis_service
      - cassandra

  pg_db:
    image: postgres:16.4
    ports:
      - "54320:5432"
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./assets/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pg_data:/var/lib/postgresql/data/
    container_name: pg_db
    restart: unless-stopped
    networks:
      - app-network

  redis_service:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    env_file:
      - .env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    container_name: redis_service
    restart: unless-stopped
    networks:
      - app-network

  cassandra:
    image: cassandra:latest
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_USER=${CASSANDRA_USER}
      - CASSANDRA_PASSWORD=${CASSANDRA_PASSWORD}
    volumes:
      - cassandra-data:/var/lib/cassandra
    networks:
      - app-network

  cassandra-init:
    image: cassandra:latest
    container_name: cassandra_init
    depends_on:
      - cassandra
    volumes:
      - ./assets/cassandra_init.cql:/cassandra_init.cql
    entrypoint: [ "/bin/sh", "-c" ]
    command: >
      "
      echo 'Waiting for Cassandra to be ready...';
      until cqlsh cassandra -u $CASSANDRA_USER -p $CASSANDRA_PASSWORD -e 'describe keyspaces'; do
        sleep 30;
      done;
      echo 'Cassandra is ready, initializing...';
      cqlsh cassandra -u $CASSANDRA_USER -p $CASSANDRA_PASSWORD -f /cassandra_init.cql;
      "
    environment:
      - CASSANDRA_USER=${CASSANDRA_USER}
      - CASSANDRA_PASSWORD=${CASSANDRA_PASSWORD}
    networks:
      - app-network

volumes:
  pg_data:
  redis_data:
  go_back:
  cassandra-data:

networks:
  app-network:
    driver: bridge