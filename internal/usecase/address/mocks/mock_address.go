// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase/address/init.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	model "github.com/go-park-mail-ru/2024_2_kotyari/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockaddressRepository is a mock of addressRepository interface.
type MockaddressRepository struct {
	ctrl     *gomock.Controller
	recorder *MockaddressRepositoryMockRecorder
}

// MockaddressRepositoryMockRecorder is the mock recorder for MockaddressRepository.
type MockaddressRepositoryMockRecorder struct {
	mock *MockaddressRepository
}

// NewMockaddressRepository creates a new mock instance.
func NewMockaddressRepository(ctrl *gomock.Controller) *MockaddressRepository {
	mock := &MockaddressRepository{ctrl: ctrl}
	mock.recorder = &MockaddressRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockaddressRepository) EXPECT() *MockaddressRepositoryMockRecorder {
	return m.recorder
}

// GetAddressByProfileID mocks base method.
func (m *MockaddressRepository) GetAddressByProfileID(ctx context.Context, profileID uint32) (model.Address, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAddressByProfileID", ctx, profileID)
	ret0, _ := ret[0].(model.Address)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAddressByProfileID indicates an expected call of GetAddressByProfileID.
func (mr *MockaddressRepositoryMockRecorder) GetAddressByProfileID(ctx, profileID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAddressByProfileID", reflect.TypeOf((*MockaddressRepository)(nil).GetAddressByProfileID), ctx, profileID)
}

// UpdateUsersAddress mocks base method.
func (m *MockaddressRepository) UpdateUsersAddress(ctx context.Context, addressID uint32, addressModel model.Address) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateUsersAddress", ctx, addressID, addressModel)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateUsersAddress indicates an expected call of UpdateUsersAddress.
func (mr *MockaddressRepositoryMockRecorder) UpdateUsersAddress(ctx, addressID, addressModel interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateUsersAddress", reflect.TypeOf((*MockaddressRepository)(nil).UpdateUsersAddress), ctx, addressID, addressModel)
}
