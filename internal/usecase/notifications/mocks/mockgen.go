// Code generated by MockGen. DO NOT EDIT.
// Source: init.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MocknotificationsRepo is a mock of notificationsRepo interface.
type MocknotificationsRepo struct {
	ctrl     *gomock.Controller
	recorder *MocknotificationsRepoMockRecorder
}

// MocknotificationsRepoMockRecorder is the mock recorder for MocknotificationsRepo.
type MocknotificationsRepoMockRecorder struct {
	mock *MocknotificationsRepo
}

// NewMocknotificationsRepo creates a new mock instance.
func NewMocknotificationsRepo(ctrl *gomock.Controller) *MocknotificationsRepo {
	mock := &MocknotificationsRepo{ctrl: ctrl}
	mock.recorder = &MocknotificationsRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocknotificationsRepo) EXPECT() *MocknotificationsRepoMockRecorder {
	return m.recorder
}

// ChangeOrdersStates mocks base method.
func (m *MocknotificationsRepo) ChangeOrdersStates() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeOrdersStates")
	ret0, _ := ret[0].(error)
	return ret0
}

// ChangeOrdersStates indicates an expected call of ChangeOrdersStates.
func (mr *MocknotificationsRepoMockRecorder) ChangeOrdersStates() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeOrdersStates", reflect.TypeOf((*MocknotificationsRepo)(nil).ChangeOrdersStates))
}
